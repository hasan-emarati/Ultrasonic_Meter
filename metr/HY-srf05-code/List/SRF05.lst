
AVRASM ver. 2.1.30  D:\image karboardi\projects of md\SRF05_digital_meter_\SRF05_EXAMPLE_MILAD\List\SRF05.asm Sun Feb 07 15:54:49 2016

D:\image karboardi\projects of md\SRF05_digital_meter_\SRF05_EXAMPLE_MILAD\List\SRF05.asm(1070): warning: Register r5 already defined by the .DEF directive
D:\image karboardi\projects of md\SRF05_digital_meter_\SRF05_EXAMPLE_MILAD\List\SRF05.asm(1071): warning: Register r4 already defined by the .DEF directive
D:\image karboardi\projects of md\SRF05_digital_meter_\SRF05_EXAMPLE_MILAD\List\SRF05.asm(1072): warning: Register r7 already defined by the .DEF directive
D:\image karboardi\projects of md\SRF05_digital_meter_\SRF05_EXAMPLE_MILAD\List\SRF05.asm(1073): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : long, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _s=R5
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c043      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 c076      	RJMP _ext_int1_isr
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c069      	RJMP _timer0_ovf_isr
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000013 0000      	.DW  0x0000
                 
                 _0x0:
000014 6944
000015 7473
000016 6e61
000017 6563      	.DB  0x44,0x69,0x73,0x74,0x61,0x6E,0x63,0x65
000018 253d
000019 2064
00001a 6d63
00001b 0020      	.DB  0x3D,0x25,0x64,0x20,0x63,0x6D,0x20,0x0
00001c 6152
00001d 697a
00001e 6579
00001f 2068      	.DB  0x52,0x61,0x7A,0x69,0x79,0x65,0x68,0x20
000020 654b
000021 7468
000022 7261
000023 0069      	.DB  0x4B,0x65,0x68,0x74,0x61,0x72,0x69,0x0
000024 6142
000025 6168
000026 6572
000027 4a20      	.DB  0x42,0x61,0x68,0x61,0x72,0x65,0x20,0x4A
000028 7661
000029 6461
00002a 0069
00002b 6553      	.DB  0x61,0x76,0x61,0x64,0x69,0x0,0x53,0x65
00002c 2074
00002d 6f70
00002e 6e69
00002f 3d74      	.DB  0x74,0x20,0x70,0x6F,0x69,0x6E,0x74,0x3D
000030 6425
000031 6320
000032 206d
000033 4400      	.DB  0x25,0x64,0x20,0x63,0x6D,0x20,0x0,0x44
000034 7369
000035 6174
000036 636e
000037 3d65      	.DB  0x69,0x73,0x74,0x61,0x6E,0x63,0x65,0x3D
000038 2e53
000039 2070
00003a 2020
00003b 0020      	.DB  0x53,0x2E,0x70,0x20,0x20,0x20,0x20,0x0
                 _0x2020003:
00003c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003d 0001      	.DW  0x01
00003e 0002      	.DW  0x02
00003f 0026      	.DW  __REG_BIT_VARS*2
                 
000040 0002      	.DW  0x02
000041 0182      	.DW  __base_y_G101
000042 0078      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000043 0000      	.DW  0
                 
                 __RESET:
000044 94f8      	CLI
000045 27ee      	CLR  R30
000046 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000047 e0f1      	LDI  R31,1
000048 bffb      	OUT  GICR,R31
000049 bfeb      	OUT  GICR,R30
00004a bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00004b e1f8      	LDI  R31,0x18
00004c bdf1      	OUT  WDTCR,R31
00004d bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00004e e08d      	LDI  R24,(14-2)+1
00004f e0a2      	LDI  R26,2
000050 27bb      	CLR  R27
                 __CLEAR_REG:
000051 93ed      	ST   X+,R30
000052 958a      	DEC  R24
000053 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000054 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000055 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000056 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000057 93ed      	ST   X+,R30
000058 9701      	SBIW R24,1
000059 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005a e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005c 9185      	LPM  R24,Z+
00005d 9195      	LPM  R25,Z+
00005e 9700      	SBIW R24,0
00005f f061      	BREQ __GLOBAL_INI_END
000060 91a5      	LPM  R26,Z+
000061 91b5      	LPM  R27,Z+
000062 9005      	LPM  R0,Z+
000063 9015      	LPM  R1,Z+
000064 01bf      	MOVW R22,R30
000065 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000066 9005      	LPM  R0,Z+
000067 920d      	ST   X+,R0
000068 9701      	SBIW R24,1
000069 f7e1      	BRNE __GLOBAL_INI_LOOP
00006a 01fb      	MOVW R30,R22
00006b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006d bfed      	OUT  SPL,R30
00006e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000070 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000071 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000072 c056      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;#define buzzer PORTD.7
                 ;#define sw_up PIND.6
                 ;#define sw_down PIND.5
                 ;
                 ;unsigned char s;
                 ; unsigned long int _time;
                 ; bit ex_int0;
                 ;  unsigned  char _buf[30];
                 ;
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _timer0_ovf_isr:
000073 93ea      	ST   -Y,R30
000074 b7ef      	IN   R30,SREG
                 ; 0000 0011 s++;
000075 9453      	INC  R5
                 ; 0000 0012 
                 ; 0000 0013 }
000076 bfef      	OUT  SREG,R30
000077 91e9      	LD   R30,Y+
000078 9518      	RETI
                 ;
                 ;
                 ;
                 ;
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 0019 {
                 _ext_int1_isr:
000079 920a      	ST   -Y,R0
00007a 921a      	ST   -Y,R1
00007b 92fa      	ST   -Y,R15
00007c 936a      	ST   -Y,R22
00007d 937a      	ST   -Y,R23
00007e 938a      	ST   -Y,R24
00007f 939a      	ST   -Y,R25
000080 93aa      	ST   -Y,R26
000081 93ba      	ST   -Y,R27
000082 93ea      	ST   -Y,R30
000083 93fa      	ST   -Y,R31
000084 b7ef      	IN   R30,SREG
000085 93ea      	ST   -Y,R30
                 ; 0000 001A if(ex_int0==0){
000086 fc20      	SBRC R2,0
000087 c007      	RJMP _0x3
                 ; 0000 001B TCCR0=0x02;
000088 e0e2      	LDI  R30,LOW(2)
000089 bfe3      	OUT  0x33,R30
                 ; 0000 001C ex_int0=1;
00008a 9468      	SET
00008b f820      	BLD  R2,0
                 ; 0000 001D MCUCR=0x08;
00008c e0e8      	LDI  R30,LOW(8)
00008d bfe5      	OUT  0x35,R30
                 ; 0000 001E }
                 ; 0000 001F else{
00008e c02c      	RJMP _0x4
                 _0x3:
                 ; 0000 0020 MCUCR=0x0C;
00008f e0ec      	LDI  R30,LOW(12)
000090 bfe5      	OUT  0x35,R30
                 ; 0000 0021 TCCR0=0x00;
000091 e0e0      	LDI  R30,LOW(0)
000092 bfe3      	OUT  0x33,R30
                 ; 0000 0022 _time=s*256+TCNT0;
000093 2da5      	MOV  R26,R5
000094 d329      	RCALL SUBOPT_0x0
000095 e0e0      	LDI  R30,LOW(256)
000096 e0f1      	LDI  R31,HIGH(256)
000097 d3c4      	RCALL __MULW12
000098 01df      	MOVW R26,R30
000099 b7e2      	IN   R30,0x32
00009a e0f0      	LDI  R31,0
00009b 0fea      	ADD  R30,R26
00009c 1ffb      	ADC  R31,R27
00009d d322      	RCALL SUBOPT_0x1
00009e 93e0 0160 	STS  __time,R30
0000a0 93f0 0161 	STS  __time+1,R31
0000a2 9360 0162 	STS  __time+2,R22
0000a4 9370 0163 	STS  __time+3,R23
                 ; 0000 0023 
                 ; 0000 0024  sprintf(_buf,"Distance=%d cm ",_time/58);
0000a6 e6e4      	LDI  R30,LOW(__buf)
0000a7 e0f1      	LDI  R31,HIGH(__buf)
0000a8 d319      	RCALL SUBOPT_0x2
                +
0000a9 e2e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000aa e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ab d316      	RCALL SUBOPT_0x2
0000ac d318      	RCALL SUBOPT_0x3
0000ad d325      	RCALL SUBOPT_0x4
                 ; 0000 0025  lcd_gotoxy(0,0);
0000ae e0a0      	LDI  R26,LOW(0)
0000af d27d      	RCALL _lcd_gotoxy
                 ; 0000 0026  lcd_puts(_buf);
0000b0 e6a4      	LDI  R26,LOW(__buf)
0000b1 e0b1      	LDI  R27,HIGH(__buf)
0000b2 d2aa      	RCALL _lcd_puts
                 ; 0000 0027  delay_us(20);
                +
0000b3 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
0000b4 958a     +DEC R24
0000b5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0000 0028 
                 ; 0000 0029  TCNT0=0x00;
0000b6 e0e0      	LDI  R30,LOW(0)
0000b7 bfe2      	OUT  0x32,R30
                 ; 0000 002A  s=0;
0000b8 2455      	CLR  R5
                 ; 0000 002B  ex_int0=0;
0000b9 94e8      	CLT
0000ba f820      	BLD  R2,0
                 ; 0000 002C  }
                 _0x4:
                 ; 0000 002D }
0000bb 91e9      	LD   R30,Y+
0000bc bfef      	OUT  SREG,R30
0000bd 91f9      	LD   R31,Y+
0000be 91e9      	LD   R30,Y+
0000bf 91b9      	LD   R27,Y+
0000c0 91a9      	LD   R26,Y+
0000c1 9199      	LD   R25,Y+
0000c2 9189      	LD   R24,Y+
0000c3 9179      	LD   R23,Y+
0000c4 9169      	LD   R22,Y+
0000c5 90f9      	LD   R15,Y+
0000c6 9019      	LD   R1,Y+
0000c7 9009      	LD   R0,Y+
0000c8 9518      	RETI
                 ;
                 ;void main(void){
                 ; 0000 002F void main(void){
                 _main:
                 ; 0000 0030 int set_point=30;
                 ; 0000 0031 
                 ; 0000 0032 char _buf2[17];
                 ; 0000 0033  DDRD=(1<<2)|(1<<7); //TRIGER AND BUZZER
0000c9 9761      	SBIW R28,17
                 ;	set_point -> R16,R17
                 ;	_buf2 -> Y+0
                +
0000ca e10e     +LDI R16 , LOW ( 30 )
0000cb e010     +LDI R17 , HIGH ( 30 )
                 	__GETWRN 16,17,30
0000cc e8e4      	LDI  R30,LOW(132)
0000cd bbe1      	OUT  0x11,R30
                 ; 0000 0034 
                 ; 0000 0035  PORTD.6=1;PORTD.5=1; //PULLUP SW UP DOWN
0000ce 9a96      	SBI  0x12,6
0000cf 9a95      	SBI  0x12,5
                 ; 0000 0036 
                 ; 0000 0037 
                 ; 0000 0038 TCCR0=0x00;
0000d0 e0e0      	LDI  R30,LOW(0)
0000d1 bfe3      	OUT  0x33,R30
                 ; 0000 0039 TCNT0=0x00;
0000d2 bfe2      	OUT  0x32,R30
                 ; 0000 003A 
                 ; 0000 003B TIMSK=0x01;
0000d3 e0e1      	LDI  R30,LOW(1)
0000d4 bfe9      	OUT  0x39,R30
                 ; 0000 003C 
                 ; 0000 003D 
                 ; 0000 003E // External Interrupt(s) initialization
                 ; 0000 003F // INT0: Off
                 ; 0000 0040 // INT1: On
                 ; 0000 0041 // INT1 Mode: Any change
                 ; 0000 0042 // INT2: Off
                 ; 0000 0043 GICR|=0x80;
0000d5 b7eb      	IN   R30,0x3B
0000d6 68e0      	ORI  R30,0x80
0000d7 bfeb      	OUT  0x3B,R30
                 ; 0000 0044 MCUCR=0x0C;
0000d8 e0ec      	LDI  R30,LOW(12)
0000d9 bfe5      	OUT  0x35,R30
                 ; 0000 0045 GIFR=0x80;
0000da e8e0      	LDI  R30,LOW(128)
0000db bfea      	OUT  0x3A,R30
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048 lcd_init(16);
0000dc e1a0      	LDI  R26,LOW(16)
0000dd d29f      	RCALL _lcd_init
                 ; 0000 0049 lcd_clear();
0000de d25b      	RCALL _lcd_clear
                 ; 0000 004A 
                 ; 0000 004B lcd_putsf("Raziyeh Kehtari");
                +
0000df e3a8     +LDI R26 , LOW ( 2 * _0x0 + ( 16 ) )
0000e0 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW2FN _0x0,16
0000e1 d289      	RCALL _lcd_putsf
                 ; 0000 004C delay_ms(1);
0000e2 e0a1      	LDI  R26,LOW(1)
0000e3 d2f6      	RCALL SUBOPT_0x5
                 ; 0000 004D lcd_gotoxy(0,1);
0000e4 d2f7      	RCALL SUBOPT_0x6
                 ; 0000 004E lcd_putsf("Bahare Javadi");
                +
0000e5 e4a8     +LDI R26 , LOW ( 2 * _0x0 + ( 32 ) )
0000e6 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW2FN _0x0,32
0000e7 d283      	RCALL _lcd_putsf
                 ; 0000 004F  delay_ms(3000);
0000e8 eba8      	LDI  R26,LOW(3000)
0000e9 e0bb      	LDI  R27,HIGH(3000)
0000ea d34a      	RCALL _delay_ms
                 ; 0000 0050 
                 ; 0000 0051 #asm("sei")
0000eb 9478      	sei
                 ; 0000 0052 while(1){
                 _0x9:
                 ; 0000 0053 PORTD.2=1;
0000ec 9a92      	SBI  0x12,2
                 ; 0000 0054 delay_us(15);
                +
0000ed e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0000ee 958a     +DEC R24
0000ef f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
                 ; 0000 0055 PORTD.2=0;
0000f0 9892      	CBI  0x12,2
                 ; 0000 0056 delay_ms(350);
0000f1 e5ae      	LDI  R26,LOW(350)
0000f2 e0b1      	LDI  R27,HIGH(350)
0000f3 d341      	RCALL _delay_ms
                 ; 0000 0057 
                 ; 0000 0058  if(sw_up==0){
0000f4 9986      	SBIC 0x10,6
0000f5 c004      	RJMP _0x10
                 ; 0000 0059   while(sw_up==0);
                 _0x11:
0000f6 9b86      	SBIS 0x10,6
0000f7 cffe      	RJMP _0x11
                 ; 0000 005A   set_point++;
                +
0000f8 5f0f     +SUBI R16 , LOW ( - 1 )
0000f9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 005B  }
                 ; 0000 005C  if(sw_down==0){
                 _0x10:
0000fa 9985      	SBIC 0x10,5
0000fb c004      	RJMP _0x14
                 ; 0000 005D   while(sw_down==0);
                 _0x15:
0000fc 9b85      	SBIS 0x10,5
0000fd cffe      	RJMP _0x15
                 ; 0000 005E   set_point--;
                +
0000fe 5001     +SUBI R16 , LOW ( 1 )
0000ff 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 005F  }
                 ; 0000 0060 
                 ; 0000 0061 
                 ; 0000 0062 
                 ; 0000 0063 
                 ; 0000 0064  sprintf(_buf2,"Set point=%d cm ",set_point);
                 _0x14:
000100 01fe      	MOVW R30,R28
000101 d2c0      	RCALL SUBOPT_0x2
                +
000102 e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 46 ) )
000103 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 46 ) )
                 	__POINTW1FN _0x0,46
000104 d2bd      	RCALL SUBOPT_0x2
000105 01f8      	MOVW R30,R16
000106 d2b9      	RCALL SUBOPT_0x1
000107 d2cb      	RCALL SUBOPT_0x4
                 ; 0000 0065  lcd_gotoxy(0,1);
000108 e0a1      	LDI  R26,LOW(1)
000109 d223      	RCALL _lcd_gotoxy
                 ; 0000 0066  lcd_puts(_buf2);
00010a 01de      	MOVW R26,R28
00010b d251      	RCALL _lcd_puts
                 ; 0000 0067 
                 ; 0000 0068  if(_time/58==set_point){
00010c d2b8      	RCALL SUBOPT_0x3
00010d 01df      	MOVW R26,R30
00010e 01cb      	MOVW R24,R22
00010f 01f8      	MOVW R30,R16
000110 d2af      	RCALL SUBOPT_0x1
000111 d399      	RCALL __CPD12
000112 f431      	BRNE _0x18
                 ; 0000 0069  buzzer=1;
000113 9a97      	SBI  0x12,7
                 ; 0000 006A  lcd_gotoxy(0,1);
000114 d2c7      	RCALL SUBOPT_0x6
                 ; 0000 006B  lcd_putsf("Distance=S.p    ");
                +
000115 e6a7     +LDI R26 , LOW ( 2 * _0x0 + ( 63 ) )
000116 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 63 ) )
                 	__POINTW2FN _0x0,63
000117 d253      	RCALL _lcd_putsf
                 ; 0000 006C 
                 ; 0000 006D  }
                 ; 0000 006E  else{
000118 c001      	RJMP _0x1B
                 _0x18:
                 ; 0000 006F   buzzer=0;
000119 9897      	CBI  0x12,7
                 ; 0000 0070  }
                 _0x1B:
                 ; 0000 0071 
                 ; 0000 0072 }
00011a cfd1      	RJMP _0x9
                 ; 0000 0073 
                 ; 0000 0074 }
                 _0x1E:
00011b cfff      	RJMP _0x1E
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
00011c d2c3      	RCALL SUBOPT_0x7
00011d d396      	RCALL __SAVELOCR2
00011e d2c4      	RCALL SUBOPT_0x8
00011f 9612      	ADIW R26,2
000120 d377      	RCALL __GETW1P
000121 9730      	SBIW R30,0
000122 f0f1      	BREQ _0x2000010
000123 d2bf      	RCALL SUBOPT_0x8
000124 d2c1      	RCALL SUBOPT_0x9
000125 018f      	MOVW R16,R30
000126 9730      	SBIW R30,0
000127 f061      	BREQ _0x2000012
                +
000128 3002     +CPI R16 , LOW ( 2 )
000129 e0e0     +LDI R30 , HIGH ( 2 )
00012a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00012b f0a0      	BRLO _0x2000013
00012c 01f8      	MOVW R30,R16
00012d 9731      	SBIW R30,1
00012e 018f      	MOVW R16,R30
                +
00012f 81aa     +LDD R26 , Y + 2
000130 81bb     +LDD R27 , Y + 2 + 1
000131 9614     +ADIW R26 , 4
000132 93ed     +ST X + , R30
000133 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000134 d2ae      	RCALL SUBOPT_0x8
000135 9612      	ADIW R26,2
000136 d2b2      	RCALL SUBOPT_0xA
000137 9731      	SBIW R30,1
000138 81ac      	LDD  R26,Y+4
000139 83a0      	STD  Z+0,R26
00013a d2a8      	RCALL SUBOPT_0x8
00013b d35c      	RCALL __GETW1P
00013c 23ff      	TST  R31
00013d f012      	BRMI _0x2000014
00013e d2a4      	RCALL SUBOPT_0x8
00013f d2a9      	RCALL SUBOPT_0xA
                 _0x2000014:
                 _0x2000013:
000140 c005      	RJMP _0x2000015
                 _0x2000010:
000141 d2a1      	RCALL SUBOPT_0x8
000142 efef      	LDI  R30,LOW(65535)
000143 efff      	LDI  R31,HIGH(65535)
000144 93ed      	ST   X+,R30
000145 93fc      	ST   X,R31
                 _0x2000015:
000146 d374      	RCALL __LOADLOCR2
000147 9625      	ADIW R28,5
000148 9508      	RET
                 __print_G100:
000149 d296      	RCALL SUBOPT_0x7
00014a 972c      	SBIW R28,12
00014b d364      	RCALL __SAVELOCR6
00014c e010      	LDI  R17,0
00014d 89aa      	LDD  R26,Y+18
00014e 89bb      	LDD  R27,Y+18+1
00014f e0e0      	LDI  R30,LOW(0)
000150 e0f0      	LDI  R31,HIGH(0)
000151 93ed      	ST   X+,R30
000152 93fc      	ST   X,R31
                 _0x2000016:
000153 8de8      	LDD  R30,Y+24
000154 8df9      	LDD  R31,Y+24+1
000155 9631      	ADIW R30,1
000156 8fe8      	STD  Y+24,R30
000157 8ff9      	STD  Y+24+1,R31
000158 9731      	SBIW R30,1
000159 91e4      	LPM  R30,Z
00015a 2f2e      	MOV  R18,R30
00015b 30e0      	CPI  R30,0
00015c f409      	BRNE PC+2
00015d c16d      	RJMP _0x2000018
00015e 2fe1      	MOV  R30,R17
00015f 30e0      	CPI  R30,0
000160 f431      	BRNE _0x200001C
000161 3225      	CPI  R18,37
000162 f411      	BRNE _0x200001D
000163 e011      	LDI  R17,LOW(1)
000164 c001      	RJMP _0x200001E
                 _0x200001D:
000165 d289      	RCALL SUBOPT_0xB
                 _0x200001E:
000166 c163      	RJMP _0x200001B
                 _0x200001C:
000167 30e1      	CPI  R30,LOW(0x1)
000168 f4b9      	BRNE _0x200001F
000169 3225      	CPI  R18,37
00016a f411      	BRNE _0x2000020
00016b d283      	RCALL SUBOPT_0xB
00016c c15c      	RJMP _0x20000E4
                 _0x2000020:
00016d e012      	LDI  R17,LOW(2)
00016e e0e0      	LDI  R30,LOW(0)
00016f 8be9      	STD  Y+17,R30
000170 e000      	LDI  R16,LOW(0)
000171 322d      	CPI  R18,45
000172 f411      	BRNE _0x2000021
000173 e001      	LDI  R16,LOW(1)
000174 c155      	RJMP _0x200001B
                 _0x2000021:
000175 322b      	CPI  R18,43
000176 f419      	BRNE _0x2000022
000177 e2eb      	LDI  R30,LOW(43)
000178 8be9      	STD  Y+17,R30
000179 c150      	RJMP _0x200001B
                 _0x2000022:
00017a 3220      	CPI  R18,32
00017b f419      	BRNE _0x2000023
00017c e2e0      	LDI  R30,LOW(32)
00017d 8be9      	STD  Y+17,R30
00017e c14b      	RJMP _0x200001B
                 _0x2000023:
00017f c002      	RJMP _0x2000024
                 _0x200001F:
000180 30e2      	CPI  R30,LOW(0x2)
000181 f439      	BRNE _0x2000025
                 _0x2000024:
000182 e050      	LDI  R21,LOW(0)
000183 e013      	LDI  R17,LOW(3)
000184 3320      	CPI  R18,48
000185 f411      	BRNE _0x2000026
000186 6800      	ORI  R16,LOW(128)
000187 c142      	RJMP _0x200001B
                 _0x2000026:
000188 c002      	RJMP _0x2000027
                 _0x2000025:
000189 30e3      	CPI  R30,LOW(0x3)
00018a f491      	BRNE _0x2000028
                 _0x2000027:
00018b 3320      	CPI  R18,48
00018c f010      	BRLO _0x200002A
00018d 332a      	CPI  R18,58
00018e f008      	BRLO _0x200002B
                 _0x200002A:
00018f c007      	RJMP _0x2000029
                 _0x200002B:
000190 e0aa      	LDI  R26,LOW(10)
000191 9f5a      	MUL  R21,R26
000192 2d50      	MOV  R21,R0
000193 2fe2      	MOV  R30,R18
000194 53e0      	SUBI R30,LOW(48)
000195 0f5e      	ADD  R21,R30
000196 c133      	RJMP _0x200001B
                 _0x2000029:
000197 e040      	LDI  R20,LOW(0)
000198 322e      	CPI  R18,46
000199 f411      	BRNE _0x200002C
00019a e014      	LDI  R17,LOW(4)
00019b c12e      	RJMP _0x200001B
                 _0x200002C:
00019c c00e      	RJMP _0x200002D
                 _0x2000028:
00019d 30e4      	CPI  R30,LOW(0x4)
00019e f491      	BRNE _0x200002F
00019f 3320      	CPI  R18,48
0001a0 f010      	BRLO _0x2000031
0001a1 332a      	CPI  R18,58
0001a2 f008      	BRLO _0x2000032
                 _0x2000031:
0001a3 c007      	RJMP _0x2000030
                 _0x2000032:
0001a4 e0aa      	LDI  R26,LOW(10)
0001a5 9f4a      	MUL  R20,R26
0001a6 2d40      	MOV  R20,R0
0001a7 2fe2      	MOV  R30,R18
0001a8 53e0      	SUBI R30,LOW(48)
0001a9 0f4e      	ADD  R20,R30
0001aa c11f      	RJMP _0x200001B
                 _0x2000030:
                 _0x200002D:
0001ab 362c      	CPI  R18,108
0001ac f419      	BRNE _0x2000033
0001ad 6002      	ORI  R16,LOW(2)
0001ae e015      	LDI  R17,LOW(5)
0001af c11a      	RJMP _0x200001B
                 _0x2000033:
0001b0 c003      	RJMP _0x2000034
                 _0x200002F:
0001b1 30e5      	CPI  R30,LOW(0x5)
0001b2 f009      	BREQ PC+2
0001b3 c116      	RJMP _0x200001B
                 _0x2000034:
0001b4 2fe2      	MOV  R30,R18
0001b5 36e3      	CPI  R30,LOW(0x63)
0001b6 f439      	BRNE _0x2000039
0001b7 d23e      	RCALL SUBOPT_0xC
0001b8 d240      	RCALL SUBOPT_0xD
0001b9 d23c      	RCALL SUBOPT_0xC
0001ba 81a4      	LDD  R26,Z+4
0001bb 93aa      	ST   -Y,R26
0001bc d240      	RCALL SUBOPT_0xE
0001bd c10b      	RJMP _0x200003A
                 _0x2000039:
0001be 37e3      	CPI  R30,LOW(0x73)
0001bf f431      	BRNE _0x200003C
0001c0 d242      	RCALL SUBOPT_0xF
0001c1 d243      	RCALL SUBOPT_0x10
0001c2 d245      	RCALL SUBOPT_0x11
0001c3 d1e3      	RCALL _strlen
0001c4 2f1e      	MOV  R17,R30
0001c5 c008      	RJMP _0x200003D
                 _0x200003C:
0001c6 37e0      	CPI  R30,LOW(0x70)
0001c7 f491      	BRNE _0x200003F
0001c8 d23a      	RCALL SUBOPT_0xF
0001c9 d23b      	RCALL SUBOPT_0x10
0001ca d23d      	RCALL SUBOPT_0x11
0001cb d1e6      	RCALL _strlenf
0001cc 2f1e      	MOV  R17,R30
0001cd 6008      	ORI  R16,LOW(8)
                 _0x200003D:
0001ce 770f      	ANDI R16,LOW(127)
0001cf 3040      	CPI  R20,0
0001d0 f011      	BREQ _0x2000041
0001d1 1741      	CP   R20,R17
0001d2 f008      	BRLO _0x2000042
                 _0x2000041:
0001d3 c001      	RJMP _0x2000040
                 _0x2000042:
0001d4 2f14      	MOV  R17,R20
                 _0x2000040:
0001d5 e040      	LDI  R20,LOW(0)
0001d6 e0e0      	LDI  R30,LOW(0)
0001d7 8be8      	STD  Y+16,R30
0001d8 e030      	LDI  R19,LOW(0)
0001d9 c062      	RJMP _0x2000043
                 _0x200003F:
0001da 36e4      	CPI  R30,LOW(0x64)
0001db f011      	BREQ _0x2000046
0001dc 36e9      	CPI  R30,LOW(0x69)
0001dd f411      	BRNE _0x2000047
                 _0x2000046:
0001de 6004      	ORI  R16,LOW(4)
0001df c002      	RJMP _0x2000048
                 _0x2000047:
0001e0 37e5      	CPI  R30,LOW(0x75)
0001e1 f491      	BRNE _0x2000049
                 _0x2000048:
0001e2 e0ea      	LDI  R30,LOW(10)
0001e3 8be8      	STD  Y+16,R30
0001e4 ff01      	SBRS R16,1
0001e5 c007      	RJMP _0x200004A
                +
0001e6 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0001e7 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0001e8 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0001e9 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0001ea d222      	RCALL SUBOPT_0x12
0001eb e01a      	LDI  R17,LOW(10)
0001ec c01f      	RJMP _0x200004B
                 _0x200004A:
                +
0001ed e1e0     +LDI R30 , LOW ( 0x2710 )
0001ee e2f7     +LDI R31 , HIGH ( 0x2710 )
0001ef e060     +LDI R22 , BYTE3 ( 0x2710 )
0001f0 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0001f1 d21b      	RCALL SUBOPT_0x12
0001f2 e015      	LDI  R17,LOW(5)
0001f3 c018      	RJMP _0x200004B
                 _0x2000049:
0001f4 35e8      	CPI  R30,LOW(0x58)
0001f5 f411      	BRNE _0x200004D
0001f6 6008      	ORI  R16,LOW(8)
0001f7 c003      	RJMP _0x200004E
                 _0x200004D:
0001f8 37e8      	CPI  R30,LOW(0x78)
0001f9 f009      	BREQ PC+2
0001fa c0ce      	RJMP _0x200008C
                 _0x200004E:
0001fb e1e0      	LDI  R30,LOW(16)
0001fc 8be8      	STD  Y+16,R30
0001fd ff01      	SBRS R16,1
0001fe c007      	RJMP _0x2000050
                +
0001ff e0e0     +LDI R30 , LOW ( 0x10000000 )
000200 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000201 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000202 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000203 d209      	RCALL SUBOPT_0x12
000204 e018      	LDI  R17,LOW(8)
000205 c006      	RJMP _0x200004B
                 _0x2000050:
                +
000206 e0e0     +LDI R30 , LOW ( 0x1000 )
000207 e1f0     +LDI R31 , HIGH ( 0x1000 )
000208 e060     +LDI R22 , BYTE3 ( 0x1000 )
000209 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00020a d202      	RCALL SUBOPT_0x12
00020b e014      	LDI  R17,LOW(4)
                 _0x200004B:
00020c 3040      	CPI  R20,0
00020d f011      	BREQ _0x2000051
00020e 770f      	ANDI R16,LOW(127)
00020f c001      	RJMP _0x2000052
                 _0x2000051:
000210 e041      	LDI  R20,LOW(1)
                 _0x2000052:
000211 ff01      	SBRS R16,1
000212 c006      	RJMP _0x2000053
000213 d1ef      	RCALL SUBOPT_0xF
000214 89ae      	LDD  R26,Y+22
000215 89bf      	LDD  R27,Y+22+1
000216 9614      	ADIW R26,4
000217 d284      	RCALL __GETD1P
000218 c00a      	RJMP _0x20000E5
                 _0x2000053:
000219 ff02      	SBRS R16,2
00021a c004      	RJMP _0x2000055
00021b d1e7      	RCALL SUBOPT_0xF
00021c d1e8      	RCALL SUBOPT_0x10
00021d d1a2      	RCALL SUBOPT_0x1
00021e c004      	RJMP _0x20000E5
                 _0x2000055:
00021f d1e3      	RCALL SUBOPT_0xF
000220 d1e4      	RCALL SUBOPT_0x10
000221 2766      	CLR  R22
000222 2777      	CLR  R23
                 _0x20000E5:
                +
000223 87ec     +STD Y + 12 , R30
000224 87fd     +STD Y + 12 + 1 , R31
000225 876e     +STD Y + 12 + 2 , R22
000226 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000227 ff02      	SBRS R16,2
000228 c012      	RJMP _0x2000057
000229 85af      	LDD  R26,Y+15
00022a 23aa      	TST  R26
00022b f442      	BRPL _0x2000058
                +
00022c 85ec     +LDD R30 , Y + 12
00022d 85fd     +LDD R31 , Y + 12 + 1
00022e 856e     +LDD R22 , Y + 12 + 2
00022f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000230 d216      	RCALL __ANEGD1
000231 d1e0      	RCALL SUBOPT_0x13
000232 e2ed      	LDI  R30,LOW(45)
000233 8be9      	STD  Y+17,R30
                 _0x2000058:
000234 89e9      	LDD  R30,Y+17
000235 30e0      	CPI  R30,0
000236 f019      	BREQ _0x2000059
000237 5f1f      	SUBI R17,-LOW(1)
000238 5f4f      	SUBI R20,-LOW(1)
000239 c001      	RJMP _0x200005A
                 _0x2000059:
00023a 7f0b      	ANDI R16,LOW(251)
                 _0x200005A:
                 _0x2000057:
00023b 2f34      	MOV  R19,R20
                 _0x2000043:
00023c fd00      	SBRC R16,0
00023d c013      	RJMP _0x200005B
                 _0x200005C:
00023e 1715      	CP   R17,R21
00023f f410      	BRSH _0x200005F
000240 1735      	CP   R19,R21
000241 f008      	BRLO _0x2000060
                 _0x200005F:
000242 c00e      	RJMP _0x200005E
                 _0x2000060:
000243 ff07      	SBRS R16,7
000244 c008      	RJMP _0x2000061
000245 ff02      	SBRS R16,2
000246 c004      	RJMP _0x2000062
000247 7f0b      	ANDI R16,LOW(251)
000248 8929      	LDD  R18,Y+17
000249 5011      	SUBI R17,LOW(1)
00024a c001      	RJMP _0x2000063
                 _0x2000062:
00024b e320      	LDI  R18,LOW(48)
                 _0x2000063:
00024c c001      	RJMP _0x2000064
                 _0x2000061:
00024d e220      	LDI  R18,LOW(32)
                 _0x2000064:
00024e d1a0      	RCALL SUBOPT_0xB
00024f 5051      	SUBI R21,LOW(1)
000250 cfed      	RJMP _0x200005C
                 _0x200005E:
                 _0x200005B:
                 _0x2000065:
000251 1714      	CP   R17,R20
000252 f488      	BRSH _0x2000067
000253 6100      	ORI  R16,LOW(16)
000254 ff02      	SBRS R16,2
000255 c006      	RJMP _0x2000068
000256 d1c0      	RCALL SUBOPT_0x14
000257 3050      	CPI  R21,0
000258 f009      	BREQ _0x2000069
000259 5051      	SUBI R21,LOW(1)
                 _0x2000069:
00025a 5011      	SUBI R17,LOW(1)
00025b 5041      	SUBI R20,LOW(1)
                 _0x2000068:
00025c e3e0      	LDI  R30,LOW(48)
00025d 93ea      	ST   -Y,R30
00025e d19e      	RCALL SUBOPT_0xE
00025f 3050      	CPI  R21,0
000260 f009      	BREQ _0x200006A
000261 5051      	SUBI R21,LOW(1)
                 _0x200006A:
000262 5041      	SUBI R20,LOW(1)
000263 cfed      	RJMP _0x2000065
                 _0x2000067:
000264 2f31      	MOV  R19,R17
000265 89e8      	LDD  R30,Y+16
000266 30e0      	CPI  R30,0
000267 f4b1      	BRNE _0x200006B
                 _0x200006C:
000268 3030      	CPI  R19,0
000269 f099      	BREQ _0x200006E
00026a ff03      	SBRS R16,3
00026b c006      	RJMP _0x200006F
00026c 81ee      	LDD  R30,Y+6
00026d 81ff      	LDD  R31,Y+6+1
00026e 9125      	LPM  R18,Z+
00026f 83ee      	STD  Y+6,R30
000270 83ff      	STD  Y+6+1,R31
000271 c005      	RJMP _0x2000070
                 _0x200006F:
000272 81ae      	LDD  R26,Y+6
000273 81bf      	LDD  R27,Y+6+1
000274 912d      	LD   R18,X+
000275 83ae      	STD  Y+6,R26
000276 83bf      	STD  Y+6+1,R27
                 _0x2000070:
000277 d177      	RCALL SUBOPT_0xB
000278 3050      	CPI  R21,0
000279 f009      	BREQ _0x2000071
00027a 5051      	SUBI R21,LOW(1)
                 _0x2000071:
00027b 5031      	SUBI R19,LOW(1)
00027c cfeb      	RJMP _0x200006C
                 _0x200006E:
00027d c042      	RJMP _0x2000072
                 _0x200006B:
                 _0x2000074:
00027e d19c      	RCALL SUBOPT_0x15
00027f d1e1      	RCALL __DIVD21U
000280 2f2e      	MOV  R18,R30
000281 302a      	CPI  R18,10
000282 f030      	BRLO _0x2000076
000283 ff03      	SBRS R16,3
000284 c002      	RJMP _0x2000077
000285 5c29      	SUBI R18,-LOW(55)
000286 c001      	RJMP _0x2000078
                 _0x2000077:
000287 5a29      	SUBI R18,-LOW(87)
                 _0x2000078:
000288 c001      	RJMP _0x2000079
                 _0x2000076:
000289 5d20      	SUBI R18,-LOW(48)
                 _0x2000079:
00028a fd04      	SBRC R16,4
00028b c01e      	RJMP _0x200007B
00028c 3321      	CPI  R18,49
00028d f448      	BRSH _0x200007D
00028e d195      	RCALL SUBOPT_0x16
                +
00028f 30a1     +CPI R26 , LOW ( 0x1 )
000290 e0e0     +LDI R30 , HIGH ( 0x1 )
000291 07be     +CPC R27 , R30
000292 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000293 078e     +CPC R24 , R30
000294 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000295 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000296 f409      	BRNE _0x200007C
                 _0x200007D:
000297 c00b      	RJMP _0x200007F
                 _0x200007C:
000298 1743      	CP   R20,R19
000299 f440      	BRSH _0x20000E6
00029a 1753      	CP   R21,R19
00029b f010      	BRLO _0x2000082
00029c ff00      	SBRS R16,0
00029d c001      	RJMP _0x2000083
                 _0x2000082:
00029e c00f      	RJMP _0x2000081
                 _0x2000083:
00029f e220      	LDI  R18,LOW(32)
0002a0 ff07      	SBRS R16,7
0002a1 c008      	RJMP _0x2000084
                 _0x20000E6:
0002a2 e320      	LDI  R18,LOW(48)
                 _0x200007F:
0002a3 6100      	ORI  R16,LOW(16)
0002a4 ff02      	SBRS R16,2
0002a5 c004      	RJMP _0x2000085
0002a6 d170      	RCALL SUBOPT_0x14
0002a7 3050      	CPI  R21,0
0002a8 f009      	BREQ _0x2000086
0002a9 5051      	SUBI R21,LOW(1)
                 _0x2000086:
                 _0x2000085:
                 _0x2000084:
                 _0x200007B:
0002aa d144      	RCALL SUBOPT_0xB
0002ab 3050      	CPI  R21,0
0002ac f009      	BREQ _0x2000087
0002ad 5051      	SUBI R21,LOW(1)
                 _0x2000087:
                 _0x2000081:
0002ae 5031      	SUBI R19,LOW(1)
0002af d16b      	RCALL SUBOPT_0x15
0002b0 d1d5      	RCALL __MODD21U
0002b1 d160      	RCALL SUBOPT_0x13
0002b2 89e8      	LDD  R30,Y+16
0002b3 d170      	RCALL SUBOPT_0x16
0002b4 27ff      	CLR  R31
0002b5 2766      	CLR  R22
0002b6 2777      	CLR  R23
0002b7 d1a9      	RCALL __DIVD21U
0002b8 d154      	RCALL SUBOPT_0x12
                +
0002b9 85e8     +LDD R30 , Y + 8
0002ba 85f9     +LDD R31 , Y + 8 + 1
0002bb 856a     +LDD R22 , Y + 8 + 2
0002bc 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
0002bd d1e9      	RCALL __CPD10
0002be f009      	BREQ _0x2000075
0002bf cfbe      	RJMP _0x2000074
                 _0x2000075:
                 _0x2000072:
0002c0 ff00      	SBRS R16,0
0002c1 c007      	RJMP _0x2000088
                 _0x2000089:
0002c2 3050      	CPI  R21,0
0002c3 f029      	BREQ _0x200008B
0002c4 5051      	SUBI R21,LOW(1)
0002c5 e2e0      	LDI  R30,LOW(32)
0002c6 93ea      	ST   -Y,R30
0002c7 d135      	RCALL SUBOPT_0xE
0002c8 cff9      	RJMP _0x2000089
                 _0x200008B:
                 _0x2000088:
                 _0x200008C:
                 _0x200003A:
                 _0x20000E4:
0002c9 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0002ca ce88      	RJMP _0x2000016
                 _0x2000018:
0002cb 89aa      	LDD  R26,Y+18
0002cc 89bb      	LDD  R27,Y+18+1
0002cd d1ca      	RCALL __GETW1P
0002ce d1e8      	RCALL __LOADLOCR6
0002cf 966a      	ADIW R28,26
0002d0 9508      	RET
                 _sprintf:
0002d1 92ff      	PUSH R15
0002d2 2ef8      	MOV  R15,R24
0002d3 9726      	SBIW R28,6
0002d4 d1dd      	RCALL __SAVELOCR4
0002d5 d153      	RCALL SUBOPT_0x17
0002d6 9730      	SBIW R30,0
0002d7 f419      	BRNE _0x200008D
0002d8 efef      	LDI  R30,LOW(65535)
0002d9 efff      	LDI  R31,HIGH(65535)
0002da c01d      	RJMP _0x2080003
                 _0x200008D:
0002db 01de      	MOVW R26,R28
0002dc 9616      	ADIW R26,6
0002dd d161      	RCALL __ADDW2R15
0002de 018d      	MOVW R16,R26
0002df d149      	RCALL SUBOPT_0x17
0002e0 83ee      	STD  Y+6,R30
0002e1 83ff      	STD  Y+6+1,R31
0002e2 e0e0      	LDI  R30,LOW(0)
0002e3 87e8      	STD  Y+8,R30
0002e4 87e9      	STD  Y+8+1,R30
0002e5 01de      	MOVW R26,R28
0002e6 961a      	ADIW R26,10
0002e7 d157      	RCALL __ADDW2R15
0002e8 d1af      	RCALL __GETW1P
0002e9 d0d8      	RCALL SUBOPT_0x2
0002ea 931a      	ST   -Y,R17
0002eb 930a      	ST   -Y,R16
0002ec e1ec      	LDI  R30,LOW(_put_buff_G100)
0002ed e0f1      	LDI  R31,HIGH(_put_buff_G100)
0002ee d0d3      	RCALL SUBOPT_0x2
0002ef 01de      	MOVW R26,R28
0002f0 961a      	ADIW R26,10
0002f1 de57      	RCALL __print_G100
0002f2 019f      	MOVW R18,R30
0002f3 81ae      	LDD  R26,Y+6
0002f4 81bf      	LDD  R27,Y+6+1
0002f5 e0e0      	LDI  R30,LOW(0)
0002f6 93ec      	ST   X,R30
0002f7 01f9      	MOVW R30,R18
                 _0x2080003:
0002f8 d1c0      	RCALL __LOADLOCR4
0002f9 962a      	ADIW R28,10
0002fa 90ff      	POP  R15
0002fb 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
0002fc 93aa      	ST   -Y,R26
0002fd 81e8      	LD   R30,Y
0002fe 71e0      	ANDI R30,LOW(0x10)
0002ff f011      	BREQ _0x2020004
000300 9ac3      	SBI  0x18,3
000301 c001      	RJMP _0x2020005
                 _0x2020004:
000302 98c3      	CBI  0x18,3
                 _0x2020005:
000303 81e8      	LD   R30,Y
000304 72e0      	ANDI R30,LOW(0x20)
000305 f011      	BREQ _0x2020006
000306 9ac2      	SBI  0x18,2
000307 c001      	RJMP _0x2020007
                 _0x2020006:
000308 98c2      	CBI  0x18,2
                 _0x2020007:
000309 81e8      	LD   R30,Y
00030a 74e0      	ANDI R30,LOW(0x40)
00030b f011      	BREQ _0x2020008
00030c 9ac1      	SBI  0x18,1
00030d c001      	RJMP _0x2020009
                 _0x2020008:
00030e 98c1      	CBI  0x18,1
                 _0x2020009:
00030f 81e8      	LD   R30,Y
000310 78e0      	ANDI R30,LOW(0x80)
000311 f011      	BREQ _0x202000A
000312 9ac0      	SBI  0x18,0
000313 c001      	RJMP _0x202000B
                 _0x202000A:
000314 98c0      	CBI  0x18,0
                 _0x202000B:
                +
000315 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000316 958a     +DEC R24
000317 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000318 9ac4      	SBI  0x18,4
                +
000319 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00031a 958a     +DEC R24
00031b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00031c 98c4      	CBI  0x18,4
                +
00031d e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00031e 958a     +DEC R24
00031f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000320 c084      	RJMP _0x2080001
                 __lcd_write_data:
000321 93aa      	ST   -Y,R26
000322 81a8      	LD   R26,Y
000323 dfd8      	RCALL __lcd_write_nibble_G101
000324 81e8          ld    r30,y
000325 95e2          swap  r30
000326 83e8          st    y,r30
000327 81a8      	LD   R26,Y
000328 dfd3      	RCALL __lcd_write_nibble_G101
                +
000329 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00032a 958a     +DEC R24
00032b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00032c c078      	RJMP _0x2080001
                 _lcd_gotoxy:
00032d 93aa      	ST   -Y,R26
00032e 81e8      	LD   R30,Y
00032f e0f0      	LDI  R31,0
000330 57ee      	SUBI R30,LOW(-__base_y_G101)
000331 4ffe      	SBCI R31,HIGH(-__base_y_G101)
000332 81e0      	LD   R30,Z
000333 81a9      	LDD  R26,Y+1
000334 0fae      	ADD  R26,R30
000335 dfeb      	RCALL __lcd_write_data
000336 8049      	LDD  R4,Y+1
000337 8078      	LDD  R7,Y+0
000338 9622      	ADIW R28,2
000339 9508      	RET
                 _lcd_clear:
00033a e0a2      	LDI  R26,LOW(2)
00033b dfe5      	RCALL __lcd_write_data
00033c e0a3      	LDI  R26,LOW(3)
00033d d09c      	RCALL SUBOPT_0x5
00033e e0ac      	LDI  R26,LOW(12)
00033f dfe1      	RCALL __lcd_write_data
000340 e0a1      	LDI  R26,LOW(1)
000341 dfdf      	RCALL __lcd_write_data
000342 e0a3      	LDI  R26,LOW(3)
000343 d096      	RCALL SUBOPT_0x5
000344 e0e0      	LDI  R30,LOW(0)
000345 2e7e      	MOV  R7,R30
000346 2e4e      	MOV  R4,R30
000347 9508      	RET
                 _lcd_putchar:
000348 93aa      	ST   -Y,R26
000349 81a8      	LD   R26,Y
00034a 30aa      	CPI  R26,LOW(0xA)
00034b f011      	BREQ _0x2020011
00034c 1446      	CP   R4,R6
00034d f048      	BRLO _0x2020010
                 _0x2020011:
00034e e0e0      	LDI  R30,LOW(0)
00034f 93ea      	ST   -Y,R30
000350 9473      	INC  R7
000351 2da7      	MOV  R26,R7
000352 dfda      	RCALL _lcd_gotoxy
000353 81a8      	LD   R26,Y
000354 30aa      	CPI  R26,LOW(0xA)
000355 f409      	BRNE _0x2020013
000356 c04e      	RJMP _0x2080001
                 _0x2020013:
                 _0x2020010:
000357 9443      	INC  R4
000358 9ac6      	SBI  0x18,6
000359 81a8      	LD   R26,Y
00035a dfc6      	RCALL __lcd_write_data
00035b 98c6      	CBI  0x18,6
00035c c048      	RJMP _0x2080001
                 _lcd_puts:
00035d d082      	RCALL SUBOPT_0x7
00035e 931a      	ST   -Y,R17
                 _0x2020014:
00035f 81a9      	LDD  R26,Y+1
000360 81ba      	LDD  R27,Y+1+1
000361 91ed      	LD   R30,X+
000362 83a9      	STD  Y+1,R26
000363 83ba      	STD  Y+1+1,R27
000364 2f1e      	MOV  R17,R30
000365 30e0      	CPI  R30,0
000366 f019      	BREQ _0x2020016
000367 2fa1      	MOV  R26,R17
000368 dfdf      	RCALL _lcd_putchar
000369 cff5      	RJMP _0x2020014
                 _0x2020016:
00036a c00f      	RJMP _0x2080002
                 _lcd_putsf:
00036b d074      	RCALL SUBOPT_0x7
00036c 931a      	ST   -Y,R17
                 _0x2020017:
00036d 81e9      	LDD  R30,Y+1
00036e 81fa      	LDD  R31,Y+1+1
00036f 9631      	ADIW R30,1
000370 83e9      	STD  Y+1,R30
000371 83fa      	STD  Y+1+1,R31
000372 9731      	SBIW R30,1
000373 91e4      	LPM  R30,Z
000374 2f1e      	MOV  R17,R30
000375 30e0      	CPI  R30,0
000376 f019      	BREQ _0x2020019
000377 2fa1      	MOV  R26,R17
000378 dfcf      	RCALL _lcd_putchar
000379 cff3      	RJMP _0x2020017
                 _0x2020019:
                 _0x2080002:
00037a 8118      	LDD  R17,Y+0
00037b 9623      	ADIW R28,3
00037c 9508      	RET
                 _lcd_init:
00037d 93aa      	ST   -Y,R26
00037e 9abb      	SBI  0x17,3
00037f 9aba      	SBI  0x17,2
000380 9ab9      	SBI  0x17,1
000381 9ab8      	SBI  0x17,0
000382 9abc      	SBI  0x17,4
000383 9abe      	SBI  0x17,6
000384 9abd      	SBI  0x17,5
000385 98c4      	CBI  0x18,4
000386 98c6      	CBI  0x18,6
000387 98c5      	CBI  0x18,5
000388 8068      	LDD  R6,Y+0
000389 81e8      	LD   R30,Y
00038a 58e0      	SUBI R30,-LOW(128)
                +
00038b 93e0 0184+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
00038d 81e8      	LD   R30,Y
00038e 54e0      	SUBI R30,-LOW(192)
                +
00038f 93e0 0185+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000391 e1a4      	LDI  R26,LOW(20)
000392 d047      	RCALL SUBOPT_0x5
000393 d09a      	RCALL SUBOPT_0x18
000394 d099      	RCALL SUBOPT_0x18
000395 d098      	RCALL SUBOPT_0x18
000396 e2a0      	LDI  R26,LOW(32)
000397 df64      	RCALL __lcd_write_nibble_G101
                +
000398 ec88     +LDI R24 , LOW ( 200 )
000399 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00039a 9701     +SBIW R24 , 1
00039b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00039c e2a8      	LDI  R26,LOW(40)
00039d df83      	RCALL __lcd_write_data
00039e e0a4      	LDI  R26,LOW(4)
00039f df81      	RCALL __lcd_write_data
0003a0 e8a5      	LDI  R26,LOW(133)
0003a1 df7f      	RCALL __lcd_write_data
0003a2 e0a6      	LDI  R26,LOW(6)
0003a3 df7d      	RCALL __lcd_write_data
0003a4 df95      	RCALL _lcd_clear
                 _0x2080001:
0003a5 9621      	ADIW R28,1
0003a6 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
0003a7 d038      	RCALL SUBOPT_0x7
0003a8 91a9          ld   r26,y+
0003a9 91b9          ld   r27,y+
0003aa 27ee          clr  r30
0003ab 27ff          clr  r31
                 strlen0:
0003ac 916d          ld   r22,x+
0003ad 2366          tst  r22
0003ae f011          breq strlen1
0003af 9631          adiw r30,1
0003b0 cffb          rjmp strlen0
                 strlen1:
0003b1 9508          ret
                 _strlenf:
0003b2 d02d      	RCALL SUBOPT_0x7
0003b3 27aa          clr  r26
0003b4 27bb          clr  r27
0003b5 91e9          ld   r30,y+
0003b6 91f9          ld   r31,y+
                 strlenf0:
0003b7 9005      	lpm  r0,z+
0003b8 2000          tst  r0
0003b9 f011          breq strlenf1
0003ba 9611          adiw r26,1
0003bb cffb          rjmp strlenf0
                 strlenf1:
0003bc 01fd          movw r30,r26
0003bd 9508          ret
                 
                 	.DSEG
                 __time:
000160           	.BYTE 0x4
                 __buf:
000164           	.BYTE 0x1E
                 __base_y_G101:
000182           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x0:
0003be e0b0      	LDI  R27,0
0003bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0003c0 d08e      	RCALL __CWD1
0003c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0003c2 93fa      	ST   -Y,R31
0003c3 93ea      	ST   -Y,R30
0003c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3:
0003c5 91a0 0160 	LDS  R26,__time
0003c7 91b0 0161 	LDS  R27,__time+1
0003c9 9180 0162 	LDS  R24,__time+2
0003cb 9190 0163 	LDS  R25,__time+3
                +
0003cd e3ea     +LDI R30 , LOW ( 0x3A )
0003ce e0f0     +LDI R31 , HIGH ( 0x3A )
0003cf e060     +LDI R22 , BYTE3 ( 0x3A )
0003d0 e070     +LDI R23 , BYTE4 ( 0x3A )
                 	__GETD1N 0x3A
0003d1 d08f      	RCALL __DIVD21U
0003d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0003d3 d0ce      	RCALL __PUTPARD1
0003d4 e084      	LDI  R24,4
0003d5 defb      	RCALL _sprintf
0003d6 9628      	ADIW R28,8
0003d7 e0e0      	LDI  R30,LOW(0)
0003d8 93ea      	ST   -Y,R30
0003d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0003da dfe3      	RCALL SUBOPT_0x0
0003db c059      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0003dc e0e0      	LDI  R30,LOW(0)
0003dd 93ea      	ST   -Y,R30
0003de e0a1      	LDI  R26,LOW(1)
0003df cf4d      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0003e0 93ba      	ST   -Y,R27
0003e1 93aa      	ST   -Y,R26
0003e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
0003e3 81aa      	LDD  R26,Y+2
0003e4 81bb      	LDD  R27,Y+2+1
0003e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
0003e6 9614      	ADIW R26,4
0003e7 d0b0      	RCALL __GETW1P
0003e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
0003e9 91ed      	LD   R30,X+
0003ea 91fd      	LD   R31,X+
0003eb 9631      	ADIW R30,1
0003ec 93fe      	ST   -X,R31
0003ed 93ee      	ST   -X,R30
0003ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xB:
0003ef 932a      	ST   -Y,R18
0003f0 89ab      	LDD  R26,Y+19
0003f1 89bc      	LDD  R27,Y+19+1
0003f2 89ed      	LDD  R30,Y+21
0003f3 89fe      	LDD  R31,Y+21+1
0003f4 9509      	ICALL
0003f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC:
0003f6 89ee      	LDD  R30,Y+22
0003f7 89ff      	LDD  R31,Y+22+1
0003f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xD:
0003f9 9734      	SBIW R30,4
0003fa 8bee      	STD  Y+22,R30
0003fb 8bff      	STD  Y+22+1,R31
0003fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE:
0003fd 89ab      	LDD  R26,Y+19
0003fe 89bc      	LDD  R27,Y+19+1
0003ff 89ed      	LDD  R30,Y+21
000400 89fe      	LDD  R31,Y+21+1
000401 9509      	ICALL
000402 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
000403 dff2      	RCALL SUBOPT_0xC
000404 cff4      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x10:
000405 89ae      	LDD  R26,Y+22
000406 89bf      	LDD  R27,Y+22+1
000407 cfde      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000408 83ee      	STD  Y+6,R30
000409 83ff      	STD  Y+6+1,R31
00040a 81ae      	LDD  R26,Y+6
00040b 81bf      	LDD  R27,Y+6+1
00040c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x12:
                +
00040d 87e8     +STD Y + 8 , R30
00040e 87f9     +STD Y + 8 + 1 , R31
00040f 876a     +STD Y + 8 + 2 , R22
000410 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000411 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
                +
000412 87ec     +STD Y + 12 , R30
000413 87fd     +STD Y + 12 + 1 , R31
000414 876e     +STD Y + 12 + 2 , R22
000415 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000417 7f0b      	ANDI R16,LOW(251)
000418 89e9      	LDD  R30,Y+17
000419 93ea      	ST   -Y,R30
00041a cfe2      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
                +
00041b 85e8     +LDD R30 , Y + 8
00041c 85f9     +LDD R31 , Y + 8 + 1
00041d 856a     +LDD R22 , Y + 8 + 2
00041e 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
00041f 85ac     +LDD R26 , Y + 12
000420 85bd     +LDD R27 , Y + 12 + 1
000421 858e     +LDD R24 , Y + 12 + 2
000422 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000423 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
                +
000424 85a8     +LDD R26 , Y + 8
000425 85b9     +LDD R27 , Y + 8 + 1
000426 858a     +LDD R24 , Y + 8 + 2
000427 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000428 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000429 01de      	MOVW R26,R28
00042a 961c      	ADIW R26,12
00042b d013      	RCALL __ADDW2R15
00042c d06b      	RCALL __GETW1P
00042d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
00042e e3a0      	LDI  R26,LOW(48)
00042f decc      	RCALL __lcd_write_nibble_G101
                +
000430 ec88     +LDI R24 , LOW ( 200 )
000431 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000432 9701     +SBIW R24 , 1
000433 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000434 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000435 9610      	adiw r26,0
000436 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000437 ed80     +LDI R24 , LOW ( 0x7D0 )
000438 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000439 9701     +SBIW R24 , 1
00043a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00043b 95a8      	wdr
00043c 9711      	sbiw r26,1
00043d f7c9      	brne __delay_ms0
                 __delay_ms1:
00043e 9508      	ret
                 
                 __ADDW2R15:
00043f 2400      	CLR  R0
000440 0daf      	ADD  R26,R15
000441 1db0      	ADC  R27,R0
000442 9508      	RET
                 
                 __ANEGW1:
000443 95f1      	NEG  R31
000444 95e1      	NEG  R30
000445 40f0      	SBCI R31,0
000446 9508      	RET
                 
                 __ANEGD1:
000447 95f0      	COM  R31
000448 9560      	COM  R22
000449 9570      	COM  R23
00044a 95e1      	NEG  R30
00044b 4fff      	SBCI R31,-1
00044c 4f6f      	SBCI R22,-1
00044d 4f7f      	SBCI R23,-1
00044e 9508      	RET
                 
                 __CWD1:
00044f 2f6f      	MOV  R22,R31
000450 0f66      	ADD  R22,R22
000451 0b66      	SBC  R22,R22
000452 2f76      	MOV  R23,R22
000453 9508      	RET
                 
                 __MULW12U:
000454 9ffa      	MUL  R31,R26
000455 2df0      	MOV  R31,R0
000456 9feb      	MUL  R30,R27
000457 0df0      	ADD  R31,R0
000458 9fea      	MUL  R30,R26
000459 2de0      	MOV  R30,R0
00045a 0df1      	ADD  R31,R1
00045b 9508      	RET
                 
                 __MULW12:
00045c d02d      	RCALL __CHKSIGNW
00045d dff6      	RCALL __MULW12U
00045e f40e      	BRTC __MULW121
00045f dfe3      	RCALL __ANEGW1
                 __MULW121:
000460 9508      	RET
                 
                 __DIVD21U:
000461 933f      	PUSH R19
000462 934f      	PUSH R20
000463 935f      	PUSH R21
000464 2400      	CLR  R0
000465 2411      	CLR  R1
000466 2744      	CLR  R20
000467 2755      	CLR  R21
000468 e230      	LDI  R19,32
                 __DIVD21U1:
000469 0faa      	LSL  R26
00046a 1fbb      	ROL  R27
00046b 1f88      	ROL  R24
00046c 1f99      	ROL  R25
00046d 1c00      	ROL  R0
00046e 1c11      	ROL  R1
00046f 1f44      	ROL  R20
000470 1f55      	ROL  R21
000471 1a0e      	SUB  R0,R30
000472 0a1f      	SBC  R1,R31
000473 0b46      	SBC  R20,R22
000474 0b57      	SBC  R21,R23
000475 f428      	BRCC __DIVD21U2
000476 0e0e      	ADD  R0,R30
000477 1e1f      	ADC  R1,R31
000478 1f46      	ADC  R20,R22
000479 1f57      	ADC  R21,R23
00047a c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00047b 60a1      	SBR  R26,1
                 __DIVD21U3:
00047c 953a      	DEC  R19
00047d f759      	BRNE __DIVD21U1
00047e 01fd      	MOVW R30,R26
00047f 01bc      	MOVW R22,R24
000480 01d0      	MOVW R26,R0
000481 01ca      	MOVW R24,R20
000482 915f      	POP  R21
000483 914f      	POP  R20
000484 913f      	POP  R19
000485 9508      	RET
                 
                 __MODD21U:
000486 dfda      	RCALL __DIVD21U
000487 01fd      	MOVW R30,R26
000488 01bc      	MOVW R22,R24
000489 9508      	RET
                 
                 __CHKSIGNW:
00048a 94e8      	CLT
00048b fff7      	SBRS R31,7
00048c c002      	RJMP __CHKSW1
00048d dfb5      	RCALL __ANEGW1
00048e 9468      	SET
                 __CHKSW1:
00048f ffb7      	SBRS R27,7
000490 c006      	RJMP __CHKSW2
000491 95a0      	COM  R26
000492 95b0      	COM  R27
000493 9611      	ADIW R26,1
000494 f800      	BLD  R0,0
000495 9403      	INC  R0
000496 fa00      	BST  R0,0
                 __CHKSW2:
000497 9508      	RET
                 
                 __GETW1P:
000498 91ed      	LD   R30,X+
000499 91fc      	LD   R31,X
00049a 9711      	SBIW R26,1
00049b 9508      	RET
                 
                 __GETD1P:
00049c 91ed      	LD   R30,X+
00049d 91fd      	LD   R31,X+
00049e 916d      	LD   R22,X+
00049f 917c      	LD   R23,X
0004a0 9713      	SBIW R26,3
0004a1 9508      	RET
                 
                 __PUTPARD1:
0004a2 937a      	ST   -Y,R23
0004a3 936a      	ST   -Y,R22
0004a4 93fa      	ST   -Y,R31
0004a5 93ea      	ST   -Y,R30
0004a6 9508      	RET
                 
                 __CPD10:
0004a7 9730      	SBIW R30,0
0004a8 4060      	SBCI R22,0
0004a9 4070      	SBCI R23,0
0004aa 9508      	RET
                 
                 __CPD12:
0004ab 17ea      	CP   R30,R26
0004ac 07fb      	CPC  R31,R27
0004ad 0768      	CPC  R22,R24
0004ae 0779      	CPC  R23,R25
0004af 9508      	RET
                 
                 __SAVELOCR6:
0004b0 935a      	ST   -Y,R21
                 __SAVELOCR5:
0004b1 934a      	ST   -Y,R20
                 __SAVELOCR4:
0004b2 933a      	ST   -Y,R19
                 __SAVELOCR3:
0004b3 932a      	ST   -Y,R18
                 __SAVELOCR2:
0004b4 931a      	ST   -Y,R17
0004b5 930a      	ST   -Y,R16
0004b6 9508      	RET
                 
                 __LOADLOCR6:
0004b7 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0004b8 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0004b9 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0004ba 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0004bb 8119      	LDD  R17,Y+1
0004bc 8108      	LD   R16,Y
0004bd 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  23 r1 :   8 r2 :   3 r3 :   0 r4 :   4 r5 :   3 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  43 r17:  36 r18:  34 r19:  15 r20:  25 r21:  28 r22:  37 r23:  25 
r24:  39 r25:  13 r26: 112 r27:  39 r28:  17 r29:   1 r30: 230 r31:  69 
x  :  23 y  : 186 z  :  14 
Registers used: 27 out of 35 (77.1%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   9 
adiw  :  23 and   :   0 andi  :   9 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  27 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   0 brmi  :   1 brne  :  39 brpl  :   1 brsh  :   4 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :  11 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :  17 
cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   5 cp    :   8 
cpc   :   7 cpi   :  46 cpse  :   0 dec   :   8 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   4 
inc   :   4 ld    :  43 ldd   :  74 ldi   : 150 lds   :   4 lpm   :  13 
lsl   :   1 lsr   :   0 mov   :  26 movw  :  27 mul   :   5 muls  :   0 
mulsu :   0 neg   :   3 nop   :   0 or    :   0 ori   :   8 out   :  22 
pop   :   4 push  :   4 rcall : 141 ret   :  46 reti  :   2 rjmp  : 117 
rol   :   7 ror   :   0 sbc   :   4 sbci  :   9 sbi   :  17 sbic  :   2 
sbis  :   2 sbiw  :  21 sbr   :   1 sbrc  :   3 sbrs  :  16 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   2 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  57 std   :  38 
sts   :   6 sub   :   1 subi  :  25 swap  :   1 tst   :   4 wdr   :   1 

Instructions used: 64 out of 114 (56.1%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00097c   2330     98   2428    8192  29.6%
[.dseg] 0x000060 0x000186      0     38     38    1119   3.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
