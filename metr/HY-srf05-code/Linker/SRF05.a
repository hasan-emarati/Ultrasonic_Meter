;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#include <alcd.h>
;#define buzzer PORTD.7
;#define sw_up PIND.6
;#define sw_down PIND.5
;
;unsigned char s;
; unsigned long int _time;
; bit ex_int0;
;  unsigned  char _buf[30];
;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011 s++;
;PCODE: $0000000F VOL: 0
; 0000 0012 
; 0000 0013 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;
;
;
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0019 {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001A if(ex_int0==0){
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001B TCCR0=0x02;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001C ex_int0=1;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001D MCUCR=0x08;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001E }
; 0000 001F else{
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0020 MCUCR=0x0C;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0021 TCCR0=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0022 _time=s*256+TCNT0;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0023 
; 0000 0024  sprintf(_buf,"Distance=%d cm ",_time/58);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0025  lcd_gotoxy(0,0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0026  lcd_puts(_buf);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0027  delay_us(20);
;PCODE: $00000042 VOL: 0
; 0000 0028 
; 0000 0029  TCNT0=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002A  s=0;
;PCODE: $00000045 VOL: 0
; 0000 002B  ex_int0=0;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002C  }
;PCODE: $00000049 VOL: 0
; 0000 002D }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;
;void main(void){
; 0000 002F void main(void){
;PCODE: $0000004D VOL: 0
; 0000 0030 int set_point=30;
; 0000 0031 
; 0000 0032 char _buf2[17];
; 0000 0033  DDRD=(1<<2)|(1<<7); //TRIGER AND BUZZER
;PCODE: $0000004E VOL: 0
;	set_point -> R16,R17
;	_buf2 -> Y+0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0034 
; 0000 0035  PORTD.6=1;PORTD.5=1; //PULLUP SW UP DOWN
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0036 
; 0000 0037 
; 0000 0038 TCCR0=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0039 TCNT0=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 003A 
; 0000 003B TIMSK=0x01;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 003C 
; 0000 003D 
; 0000 003E // External Interrupt(s) initialization
; 0000 003F // INT0: Off
; 0000 0040 // INT1: On
; 0000 0041 // INT1 Mode: Any change
; 0000 0042 // INT2: Off
; 0000 0043 GICR|=0x80;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0044 MCUCR=0x0C;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0045 GIFR=0x80;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0046 
; 0000 0047 
; 0000 0048 lcd_init(16);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0049 lcd_clear();
;PCODE: $00000066 VOL: 0
; 0000 004A 
; 0000 004B lcd_putsf("Raziyeh Kehtari");
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004C delay_ms(1);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 004D lcd_gotoxy(0,1);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 004E lcd_putsf("Bahare Javadi");
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 004F  delay_ms(3000);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0050 
; 0000 0051 #asm("sei")
;PCODE: $00000076 VOL: 0
	sei
;PCODE: $00000077 VOL: 0
; 0000 0052 while(1){
;PCODE: $00000078 VOL: 0
; 0000 0053 PORTD.2=1;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0054 delay_us(15);
;PCODE: $0000007B VOL: 0
; 0000 0055 PORTD.2=0;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0056 delay_ms(350);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0057 
; 0000 0058  if(sw_up==0){
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0059   while(sw_up==0);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 005A   set_point++;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 005B  }
; 0000 005C  if(sw_down==0){
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 005D   while(sw_down==0);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 005E   set_point--;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 005F  }
; 0000 0060 
; 0000 0061 
; 0000 0062 
; 0000 0063 
; 0000 0064  sprintf(_buf2,"Set point=%d cm ",set_point);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0065  lcd_gotoxy(0,1);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0066  lcd_puts(_buf2);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0067 
; 0000 0068  if(_time/58==set_point){
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0069  buzzer=1;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 006A  lcd_gotoxy(0,1);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 006B  lcd_putsf("Distance=S.p    ");
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 006C 
; 0000 006D  }
; 0000 006E  else{
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 006F   buzzer=0;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0070  }
;PCODE: $000000BF VOL: 0
; 0000 0071 
; 0000 0072 }
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0073 
; 0000 0074 }
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
